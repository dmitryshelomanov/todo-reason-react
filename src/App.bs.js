// Generated by BUCKLESCRIPT VERSION 4.0.3, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("root");

var id = /* record */[/* contents */0];

function uniqId() {
  id[0] = id[0] + 1 | 0;
  return id[0];
}

function make() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var send = param[/* send */3];
              var state = param[/* state */1];
              var len = String(List.length(state[/* todos */1]));
              var renderTodo = function (todo) {
                var match = todo[/* isChecked */1];
                return React.createElement("li", {
                            key: String(todo[/* id */0]),
                            className: match ? "list-group-item disabled" : "list-group-item",
                            onClick: (function () {
                                return Curry._1(send, /* ToggleTodo */Block.__(1, [todo[/* id */0]]));
                              })
                          }, todo[/* title */2], React.createElement("input", {
                                checked: todo[/* isChecked */1],
                                type: "checkbox"
                              }));
              };
              var todosItem = $$Array.of_list(List.map(renderTodo, state[/* todos */1]));
              var addNewTodo = function ($$event) {
                $$event.preventDefault();
                return Curry._1(send, /* AddTodo */Block.__(0, [state[/* todo */0]]));
              };
              var updateChar = function ($$event) {
                var value = $$event.target.value;
                return Curry._1(send, /* UpdateValue */Block.__(2, [value]));
              };
              return React.createElement("div", undefined, React.createElement("nav", {
                              className: "navbar navbar-dark bg-dark"
                            }, React.createElement("a", {
                                  className: "navbar-brand",
                                  href: "#"
                                }, "Simple Todo App"), React.createElement("span", {
                                  className: "navbar-text"
                                }, len + " items")), React.createElement("section", {
                              className: "container"
                            }, React.createElement("form", {
                                  onSubmit: addNewTodo
                                }, React.createElement("h2", undefined, "Todo title"), React.createElement("input", {
                                      className: "form-control",
                                      placeholder: "your todo",
                                      type: "text",
                                      value: state[/* todo */0],
                                      onChange: updateChar
                                    }), React.createElement("ul", {
                                      className: "list-group"
                                    }, todosItem))));
            }),
          /* initialState */(function () {
              return /* record */[
                      /* todo */"",
                      /* todos : [] */0
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              switch (action.tag | 0) {
                case 0 : 
                    return /* Update */Block.__(0, [/* record */[
                                /* todo */"",
                                /* todos : :: */[
                                  /* record */[
                                    /* id */uniqId(/* () */0),
                                    /* isChecked */false,
                                    /* title */action[0]
                                  ],
                                  state[/* todos */1]
                                ]
                              ]]);
                case 1 : 
                    var id = action[0];
                    var todos = List.map((function (todo) {
                            var match = todo[/* id */0] === id;
                            if (match) {
                              return /* record */[
                                      /* id */todo[/* id */0],
                                      /* isChecked */!todo[/* isChecked */1],
                                      /* title */todo[/* title */2]
                                    ];
                            } else {
                              return todo;
                            }
                          }), state[/* todos */1]);
                    return /* Update */Block.__(0, [/* record */[
                                /* todo */state[/* todo */0],
                                /* todos */todos
                              ]]);
                case 2 : 
                    return /* Update */Block.__(0, [/* record */[
                                /* todo */action[0],
                                /* todos */state[/* todos */1]
                              ]]);
                
              }
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.id = id;
exports.uniqId = uniqId;
exports.make = make;
/* component Not a pure module */
